From 805d2fafa445d4337f6d634b4766e5ddd02273a5 Mon Sep 17 00:00:00 2001
From: Gunjan Gupta <viraniac@gmail.com>
Date: Thu, 7 Sep 2023 12:24:01 +0000
Subject: [PATCH] xradio: allow to crash firmware via debugfs

---
 drivers/net/wireless/xradio/hwio.c   |  8 ++++++++
 drivers/net/wireless/xradio/main.c   | 26 ++++++++++++++++++++++++++
 drivers/net/wireless/xradio/xradio.h |  1 +
 3 files changed, 35 insertions(+)

diff --git a/drivers/net/wireless/xradio/hwio.c b/drivers/net/wireless/xradio/hwio.c
index 7f1f1e26eed1..51dbff6f00c4 100644
--- a/drivers/net/wireless/xradio/hwio.c
+++ b/drivers/net/wireless/xradio/hwio.c
@@ -113,6 +113,14 @@ int xradio_data_read(struct xradio_common *hw_priv, void *buf, size_t buf_len)
 		while (retry <= MAX_RETRY) {
 			ret = __xradio_read(hw_priv, HIF_IN_OUT_QUEUE_REG_ID, buf,
 			                    buf_len, buf_id_rx + 1);
+
+			if (hw_priv->crash_fw) {
+				xr_printk(XRADIO_DBG_ERROR, "HWIO: performing multiple read to crash FW\n");
+				retry++;
+				mdelay(1);
+				continue;
+			}
+
 			if (!ret) {
 				buf_id_rx = (buf_id_rx + 1) & 3;
 				hw_priv->buf_id_rx = buf_id_rx;
diff --git a/drivers/net/wireless/xradio/main.c b/drivers/net/wireless/xradio/main.c
index 374b161bb498..22e1fb50be0b 100644
--- a/drivers/net/wireless/xradio/main.c
+++ b/drivers/net/wireless/xradio/main.c
@@ -14,6 +14,7 @@
 #include <net/cfg80211.h>
 #include <linux/of_net.h>
 #include <linux/mmc/sdio_func.h>
+#include <linux/debugfs.h>
 
 #include "xradio.h"
 #include "fwio.h"
@@ -497,6 +498,24 @@ void xradio_unregister_common(struct ieee80211_hw *dev)
 	hw_priv->driver_ready = 0;
 }
 
+int debugfs_get(void *data, u64 *val){
+	struct xradio_common* hw_priv = (struct xradio_common*) data;
+	if (hw_priv) {
+		*val = (u64) hw_priv->crash_fw;
+	}
+	return 0;
+}
+
+int debugfs_set(void *data, u64 val){
+	struct xradio_common* hw_priv = (struct xradio_common*) data;
+	if (hw_priv) {
+		hw_priv->crash_fw = (bool) val;
+	}
+	return 0;
+}
+
+DEFINE_DEBUGFS_ATTRIBUTE(debug_fileops, debugfs_get, debugfs_set, "%llu\n");
+
 int xradio_core_init(struct sdio_func* func)
 {
 	int err = -ENOMEM;
@@ -523,6 +542,12 @@ int xradio_core_init(struct sdio_func* func)
 	hw_priv->sdio_func = func;
 	sdio_set_drvdata(func, hw_priv);
 
+	struct dentry *debug_file = NULL;
+	hw_priv->debug_dir = debugfs_create_dir("xradio", NULL);
+	if (hw_priv->debug_dir) {
+		debug_file = debugfs_create_file("crash_fw", 0644, hw_priv->debug_dir, hw_priv, &debug_fileops);
+	}
+
 	// fill in mac addresses
 	if (hw_priv->pdev->of_node) {
 #if LINUX_VERSION_CODE < KERNEL_VERSION(5, 13, 0)
@@ -624,6 +649,10 @@ void xradio_core_deinit(struct sdio_func* func)
 {
 	struct xradio_common* hw_priv = sdio_get_drvdata(func);
 	if (hw_priv) {
+		if (hw_priv->debug_dir) {
+			debugfs_remove_recursive(hw_priv->debug_dir);
+			hw_priv->debug_dir = NULL;
+		}
 		xradio_unregister_common(hw_priv->hw);
 		xradio_dev_deinit(hw_priv);
 		xradio_unregister_bh(hw_priv);
diff --git a/drivers/net/wireless/xradio/xradio.h b/drivers/net/wireless/xradio/xradio.h
index 9f47a8b97607..6ad4d5116c20 100644
--- a/drivers/net/wireless/xradio/xradio.h
+++ b/drivers/net/wireless/xradio/xradio.h
@@ -316,6 +316,8 @@ struct xradio_common {
 	u8          connected_sta_cnt;
 	u16			vif0_throttle;
 	u16			vif1_throttle;
+	bool		crash_fw;
+	struct dentry *debug_dir;
 };
 
 /* Virtual Interface State. One copy per VIF */
-- 
2.34.1

